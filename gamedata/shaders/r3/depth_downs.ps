#include "common.h"
#ifndef ISAMPLE
#define ISAMPLE 0
#endif
uniform float3x4 m_v2w;
struct _input {
float4 tc0:TEXCOORD0;
float2 tcJ:TEXCOORD1;
float4 pos2d:SV_Position;
};
#ifdef HDAO
#include "ssao_hdao.ps"
#endif
float4 main(_input I):SV_Target0 {
gbuffer_data gbd0=gbuffer_load_data(GLD_P(I.tc0.xy+0.5f*pos_decompression_params2.zw,I.pos2d*2,ISAMPLE));
gbuffer_data gbd1=gbuffer_load_data(GLD_P(I.tc0.xy-0.5f*pos_decompression_params2.zw,I.pos2d*2,ISAMPLE));
gbuffer_data gbd2=gbuffer_load_data(GLD_P(I.tc0.xy+0.5f*float2(+pos_decompression_params2.z,-pos_decompression_params2.w),I.pos2d*2,ISAMPLE));
gbuffer_data gbd3=gbuffer_load_data(GLD_P(I.tc0.xy+0.5f*float2(-pos_decompression_params2.z,+pos_decompression_params2.w),I.pos2d*2,ISAMPLE));
gbuffer_data gbd=gbd0;
if(gbd1.P.z<gbd.P.z)gbd=gbd1;
if(gbd2.P.z<gbd.P.z)gbd=gbd2;
if(gbd3.P.z<gbd.P.z)gbd=gbd3;
float4 P=float4(gbd.P,gbd.mtl);
#ifndef HDAO
#if SSAO_OPT_DATA==2 
return float4(P.zzzz);
#else
gbd=gbuffer_load_data(GLD_P(I.tc0.xy,I.pos2d,ISAMPLE));
return float4(gbd.P.zzzz);
#endif
#else
#if SSAO_OPT_DATA==2 
return float4(P.zzzz+g_fHDAOZDispScale*gbd.N.zzzz);
#else
gbd=gbuffer_load_data(GLD_P(I.tc0.xy,I.pos2d,ISAMPLE));
return float4(gbd.P.zzzz+g_fHDAOZDispScale*gbd.N.zzzz);
#endif
#endif
}